Question
    Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1
    as one sorted array.

    The number of elements initialized in nums1 and nums2 are m and n respectively.
    You may assume that nums1 has a size equal to m + n such that it has
    enough space to hold additional elements from nums2.

    Constraints:
        - nums1.length == m + n
        - nums2.length == n
        - 0 <= m, n <= 200
        - 1 <= m + n <= 200
        - -10^9 <= nums1[i], nums2[i] <= 10^9

Thoughts Before Coding
    - If we are trying to populate the 'nums1' from left -> right
        - We will be overriding some of the elements inside 'nums1'
        - So, we should be populating the values inside 'nums1' from 'right -> left'
    - We can implement a 3 pointer approach
        - One pointer 'i' will keep track of our position inside 'nums1'
            - 'i' will initially be equal to 'm - 1'
        - One pointer 'j' will be keep track of our position inside 'nums2'
            - 'j' will initially be equal to 'n - 1'
        - One pointer 'k' will keep track of the index we are populating
          inside 'nums1'
            - 'k' will be starting from the last index of 'nums1'
    - In each of the iteration
        - We will want to pick the larger value between the values at 'i' and
          'j' to be populated at 'k'

Answer
    - Create the following variables
        - i, index inside 'nums1', initially 'm - 1'
        - j, index inside 'nums2', initially 'n - 1'
        - k, index we are populating, 'nums.length - 1'
    - While 'i' OR 'j' is not out of bound
        - If 'j' is out of bound OR ('i' is not out of bound AND 'nums1[i]' is
          greater than or equal to the element at 'nums2[j]')
            - Set 'nums1[k]' to 'nums1[i]'
            - decrement both 'i' and 'k'
        - Else
            - Set 'nums1[k]' to 'nums2[j]'
            - decrement both 'j' and 'k'

What is the Time and Space Complexity?
    - Time Complexity = O(n), where 'n' is the length of 'nums1'
        - O(n), populate each index inside 'nums1'
    - Space Complexity = O(1)











