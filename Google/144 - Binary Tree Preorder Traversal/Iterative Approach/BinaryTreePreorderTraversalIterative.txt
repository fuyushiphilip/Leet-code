Question
    Given the root of a binary tree, return the preorder traversal of its nodes' values.

Thoughts Before Coding
    - The direction of a preorder traversal is 'root -> left -> right' subtree
    - We will need a way to mimic the recursive call stack memory
        - This can be done using a regular 'stack' data structure

Answer
    - Validate the input parameter
        - If 'root' is null
            - Return an empty list
    - Create the following variables
        - values, list to keep track of all node values
        - stack, to implementing iterative preorder traversal
   - Push 'root' into 'stack'
   - While 'stack' is not empty
        - Pop a 'node' from 'stack'
        - Add 'node.val' to 'values'
        - If 'node.right' is not null
            - Push 'node.right' into 'stack'
        - If 'node.left' is not null
            - Push 'node.left' into 'stack'
    - Return 'values'

What is the Time and Space Complexity?
    - Time Complexity = O(n), where 'n' is the number of nodes in the input tree
        - O(n), visit each node once
    - Space Complexity = O(n) + O(h) = O(n), where 'n' is the number of nodes in the input tree and
      'h' is the height of the input tree
        - O(n), 'values' list
        - O(h), 'stack' data structure