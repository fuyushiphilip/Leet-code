Question
    You are given an array of k linked-lists lists, each linked-list is sorted
    in ascending order.

    Merge all the linked-lists into one sorted linked-list and return it.

    Constraints:
        - k == lists.length
        - 0 <= k <= 10^4
        - 0 <= lists[i].length <= 500
        - -10^4 <= lists[i][j] <= 10^4
        - lists[i] is sorted in ascending order.
        - The sum of lists[i].length won't exceed 10^4.

Thoughts Before Coding
    - Instead of starting out with k list
        - lets first go over the case where we have to merge 2 lists
            - When we are trying to merge 2 list
                - We implemented a two pointer approach
                    - one pointer will be in list1
                    - one pointer will be in list2
                - In each of the iteration
                    - We picked the smaller node out of the two pointers
                      to be appended to our resulting list
    - If we expand this to k lists
        - We want to retrieve the smallest node out of 'k' lists
        - This means we can create min heap to keep track of our nodes
            - This will allow us to quickly retrieve the minimum
              node to be appended to our resulting list

Answer
    - Create a 'minHeap' to keep track of the heads of our linked list
    - Iterate through the 'lists', denoted as 'list'
        - If 'list' is not equal to null
            - Add 'list' to 'minHeap'
    - Create the following variables
        - head, the sentinel head of the result list
        - tail, the sentinel tail, initially 'head'
    - While 'minHeap' is not empty
        - Poll a 'node' from 'minHeap'
        - Set 'tail.next' to 'node'
        - Set 'tail' to 'node'
        - If 'node.next' is not equal to null
            - Add 'node.next' to 'minHeap'
    - Return 'head.next'

What is the Time and Space Complexity?
    - Time Complexity = O(klogk) + O(nlogk) = O(nlogk), where 'n' is
      the total number of nodes, and k is the number of lists
        - O(klogk), creating 'minHeap'
        - O(nlogk), processing all nodes in heap
    - Space Complexity = O(k), where 'k' is the number of lists
        - O(k), minHeap









